// Create a new project
project --topLevelPackage es.jtestme.collector ---projectName jtestme-collector --packaging WAR --java 6 

// Setup JPA persistence using Hibernate and HSQL
jpa setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT --databaseName database/jtestme-collector

// Create domain entities
entity jpa --class ~.domain.Verificator --serializable --equals --activeRecord true --testAutomatically
field string --fieldName name --notNull
field string --fieldName type --notNull
field string --fieldName success --notNull
field string --fieldName message
field string --fieldName cause

enum type --class ~.domain.reference.StateType
enum constant --name OK
enum constant --name ERROR
enum constant --name NO_CONNECT
enum constant --name NO_VERIFICATOR

entity jpa --class ~.domain.ServerState --serializable --equals --activeRecord true --testAutomatically
field enum --fieldName stateType --type ~.domain.reference.StateType --notNull
field date --fieldName stateDate --type java.util.Date --persistenceType JPA_TIMESTAMP


enum type --class ~.domain.reference.ServerType
enum constant --name HTTP
enum constant --name HTTPS
//enum constant --name CUSTOM

entity jpa --class ~.domain.Server --serializable --equals --activeRecord true --testAutomatically
field enum --fieldName serverType --type ~.domain.reference.ServerType --notNull
field string --fieldName name --notNull --sizeMax 100
field string --fieldName url --sizeMax 250
field string --fieldName username --sizeMax 50
field string --fieldName password --sizeMax 50
field string --fieldName proxyHost 
field string --fieldName proxyPort
field string --fieldName proxyUser 
field string --fieldName proxyPassword
field string --fieldName trustStore
field string --fieldName trustStorePassword
//field string --fieldName class


enum type --class ~.domain.reference.EnvironmentType
enum constant --name DEVELOPMENT
enum constant --name PREPRODUCTION
enum constant --name PRODUCTION
enum constant --name TESTING
enum constant --name OTHER

entity jpa --class ~.domain.Environment --serializable --equals --activeRecord true --testAutomatically
field string --fieldName name --notNull --sizeMax 100
field enum --fieldName environmentType --type ~.domain.reference.EnvironmentType --notNull
field string --fieldName description --sizeMax 250
field boolean --fieldName startWatching --notNull --primitive --value true
field boolean --fieldName mailingError --notNull --primitive --value true
field boolean --fieldName mailingNoConnect --notNull --primitive --value true
//field date --fieldName watchStartDate
//field date --fieldName watchEndDate
//field number --type int --fieldName watchEveryMinutes --min 1 --max 1440
//field string --fieldName watchDays

entity jpa --class ~.domain.Owner --serializable --equals --activeRecord true --testAutomatically
field string --fieldName firstName --notNull --sizeMax 100
field string --fieldName lastName --sizeMax 100
field string --fieldName email --regexp "[a-zA-Z0-9\.\-]+@[a-zA-Z0-9\.]+" --notNull --sizeMax 100
field string --fieldName phone --sizeMax 10

entity jpa --class ~.domain.Application --serializable --equals --activeRecord true --testAutomatically
field string --fieldName name --notNull --sizeMax 30
field string --fieldName description --sizeMax 250


field reference --fieldName serverState --type ~.domain.ServerState --cardinality MANY_TO_ONE --notNull --fetch LAZY --class ~.domain.Verificator
field set --fieldName verificators --type ~.domain.Verificator --cardinality ONE_TO_MANY --fetch EAGER --class ~.domain.ServerState --mappedBy serverState

field reference --fieldName server --type ~.domain.Server --cardinality MANY_TO_ONE --notNull --fetch LAZY --class ~.domain.ServerState
field set --fieldName states --type ~.domain.ServerState --cardinality ONE_TO_MANY --fetch LAZY --class ~.domain.Server --mappedBy server

field reference --fieldName environment --type ~.domain.Environment --cardinality MANY_TO_ONE --fetch LAZY --class ~.domain.Server
field set --fieldName servers --type ~.domain.Server --cardinality ONE_TO_MANY --fetch EAGER --class ~.domain.Environment --mappedBy environment

field reference --fieldName application --type ~.domain.Application --cardinality MANY_TO_ONE --fetch LAZY --class ~.domain.Environment
field set --fieldName environments --type ~.domain.Environment  --cardinality ONE_TO_MANY --fetch EAGER --class ~.domain.Application --mappedBy application

field reference --fieldName application --type ~.domain.Application --cardinality MANY_TO_ONE --fetch LAZY --class ~.domain.Owner 
field set --fieldName owners --type ~.domain.Owner --cardinality ONE_TO_MANY --fetch LAZY --class ~.domain.Application --mappedBy application


// Define a repository layer for persistence
//repository jpa --interface ~.repository.VerificatorRepository --entity ~.domain.Verificator
//repository jpa --interface ~.repository.ServerStateRepository --entity ~.domain.ServerState
//repository jpa --interface ~.repository.ServerRepository --entity ~.domain.Server
//repository jpa --interface ~.repository.EnvironmentRepository --entity ~.domain.Environment
//repository jpa --interface ~.repository.OwnerRepository --entity ~.domain.Owner
//repository jpa --interface ~.repository.ApplicationRepository --entity ~.domain.Application

//finders
//NOTE: with repository don't work only with activeRecord
finder add --finderName findEnvironmentsByStartWatching --class ~.domain.Environment
//finder add --finderName findServerStateByEnvironmentAndLastState --class ~.domain.ServerState

// Define a service/facade layer
service --interface ~.service.JTestMeCollectorService --class ~.service.JTestMeCollectorServiceImpl --entity ~.domain.Environment
//email sender configuration
email sender setup --hostServer 127.0.0.1 --port 21 --protocol SMTP --username anonymous --password anonymous
field email template --class ~.service.JTestMeCollectorServiceImpl

//web
web mvc setup
web mvc scaffold --class ~.web.ApplicationController --backingType ~.domain.Application
web mvc scaffold --class ~.web.OwnerController --backingType ~.domain.Owner
web mvc scaffold --class ~.web.EnvironmentController --backingType ~.domain.Environment
web mvc scaffold --class ~.web.ServerController --backingType ~.domain.Server
//web mvc finder all
web mvc language --code es

//security
security setup

//logging
logging setup --level INFO

//testing
test integration --entity ~.domain.Application
test integration --entity ~.domain.Owner
test integration --entity ~.domain.Environment
test integration --entity ~.domain.Server
test integration --entity ~.domain.ServerState
test integration --entity ~.domain.Verificator

selenium test --controller ~.web.ApplicationController
selenium test --controller ~.web.OwnerController
selenium test --controller ~.web.EnvironmentController
selenium test --controller ~.web.ServerController