// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.jtestme.collector.web;

import es.jtestme.collector.domain.Application;
import es.jtestme.collector.domain.Environment;
import es.jtestme.collector.domain.Owner;
import es.jtestme.collector.domain.Server;
import es.jtestme.collector.service.JTestMeCollectorService;
import es.jtestme.collector.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    JTestMeCollectorService ApplicationConversionServiceFactoryBean.jTestMeCollectorService;
    
    public Converter<Application, String> ApplicationConversionServiceFactoryBean.getApplicationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.jtestme.collector.domain.Application, java.lang.String>() {
            public String convert(Application application) {
                return new StringBuilder().append(application.getName()).append(' ').append(application.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Application> ApplicationConversionServiceFactoryBean.getIdToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.jtestme.collector.domain.Application>() {
            public es.jtestme.collector.domain.Application convert(java.lang.Long id) {
                return Application.findApplication(id);
            }
        };
    }
    
    public Converter<String, Application> ApplicationConversionServiceFactoryBean.getStringToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.jtestme.collector.domain.Application>() {
            public es.jtestme.collector.domain.Application convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Application.class);
            }
        };
    }
    
    public Converter<Environment, String> ApplicationConversionServiceFactoryBean.getEnvironmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.jtestme.collector.domain.Environment, java.lang.String>() {
            public String convert(Environment environment) {
                return new StringBuilder().append(environment.getName()).append(' ').append(environment.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Environment> ApplicationConversionServiceFactoryBean.getIdToEnvironmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.jtestme.collector.domain.Environment>() {
            public es.jtestme.collector.domain.Environment convert(java.lang.Long id) {
                return jTestMeCollectorService.findEnvironment(id);
            }
        };
    }
    
    public Converter<String, Environment> ApplicationConversionServiceFactoryBean.getStringToEnvironmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.jtestme.collector.domain.Environment>() {
            public es.jtestme.collector.domain.Environment convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Environment.class);
            }
        };
    }
    
    public Converter<Owner, String> ApplicationConversionServiceFactoryBean.getOwnerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.jtestme.collector.domain.Owner, java.lang.String>() {
            public String convert(Owner owner) {
                return new StringBuilder().append(owner.getFirstName()).append(' ').append(owner.getLastName()).append(' ').append(owner.getEmail()).append(' ').append(owner.getPhone()).toString();
            }
        };
    }
    
    public Converter<Long, Owner> ApplicationConversionServiceFactoryBean.getIdToOwnerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.jtestme.collector.domain.Owner>() {
            public es.jtestme.collector.domain.Owner convert(java.lang.Long id) {
                return Owner.findOwner(id);
            }
        };
    }
    
    public Converter<String, Owner> ApplicationConversionServiceFactoryBean.getStringToOwnerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.jtestme.collector.domain.Owner>() {
            public es.jtestme.collector.domain.Owner convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Owner.class);
            }
        };
    }
    
    public Converter<Server, String> ApplicationConversionServiceFactoryBean.getServerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.jtestme.collector.domain.Server, java.lang.String>() {
            public String convert(Server server) {
                return new StringBuilder().append(server.getName()).append(' ').append(server.getUrl()).append(' ').append(server.getUsername()).append(' ').append(server.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, Server> ApplicationConversionServiceFactoryBean.getIdToServerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.jtestme.collector.domain.Server>() {
            public es.jtestme.collector.domain.Server convert(java.lang.Long id) {
                return Server.findServer(id);
            }
        };
    }
    
    public Converter<String, Server> ApplicationConversionServiceFactoryBean.getStringToServerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.jtestme.collector.domain.Server>() {
            public es.jtestme.collector.domain.Server convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Server.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getApplicationToStringConverter());
        registry.addConverter(getIdToApplicationConverter());
        registry.addConverter(getStringToApplicationConverter());
        registry.addConverter(getEnvironmentToStringConverter());
        registry.addConverter(getIdToEnvironmentConverter());
        registry.addConverter(getStringToEnvironmentConverter());
        registry.addConverter(getOwnerToStringConverter());
        registry.addConverter(getIdToOwnerConverter());
        registry.addConverter(getStringToOwnerConverter());
        registry.addConverter(getServerToStringConverter());
        registry.addConverter(getIdToServerConverter());
        registry.addConverter(getStringToServerConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
